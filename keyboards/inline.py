from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import MAIN_ADMIN_IDS

def get_user_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data="create_appeal")],
        [InlineKeyboardButton(text="üìú –ò—Å—Ç–æ—Ä–∏—è –ø–æ —Å–µ—Ä–∏–π–Ω–∏–∫—É", callback_data="serial_history")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è", callback_data="my_appeals_user")]
    ])

def get_admin_menu(user_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –û—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞—è–≤–∫–∏", callback_data="open_appeals")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏", callback_data="my_appeals")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats")],
        [InlineKeyboardButton(text="üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–π", callback_data="manage_base")],
        [InlineKeyboardButton(text="üîê –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", callback_data="admin_panel")]
    ])

def get_my_appeals_user_menu(appeals):
    keyboard = []
    for appeal in appeals:
        keyboard.append([
            InlineKeyboardButton(
                text=f"–ó–∞—è–≤–∫–∞ ‚Ññ{appeal['appeal_id']} ({appeal['status']})",
                callback_data=f"view_appeal_user_{appeal['appeal_id']}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_open_appeals_menu(appeals):
    keyboard = []
    for appeal in appeals:
        keyboard.append([
            InlineKeyboardButton(
                text=f"–ó–∞—è–≤–∫–∞ ‚Ññ{appeal['appeal_id']} ({appeal['status']})",
                callback_data=f"view_appeal_{appeal['appeal_id']}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_my_appeals_menu(appeals):
    keyboard = []
    for appeal in appeals:
        keyboard.append([
            InlineKeyboardButton(
                text=f"–ó–∞—è–≤–∫–∞ ‚Ññ{appeal['appeal_id']} ({appeal['status']})",
                callback_data=f"view_appeal_{appeal['appeal_id']}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_appeal_actions_menu(appeal_id, status):
    keyboard = []
    if status in ["new", "postponed", "overdue"]:
        keyboard.append([InlineKeyboardButton(text="‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"take_appeal_{appeal_id}")])
    if status in ["in_progress"]:
        keyboard.extend([
            [InlineKeyboardButton(text="üìù –û—Ç–≤–µ—Ç–∏—Ç—å", callback_data=f"respond_appeal_{appeal_id}")],
            [InlineKeyboardButton(text="üîÑ –î–µ–ª–µ–≥–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"delegate_appeal_{appeal_id}")]
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="open_appeals")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_notification_menu(appeal_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"take_appeal_{appeal_id}")],
        [InlineKeyboardButton(text="‚è≥ –û—Ç–ª–æ–∂–∏—Ç—å", callback_data=f"postpone_appeal_{appeal_id}")]
    ])

def get_response_menu(appeal_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"view_appeal_{appeal_id}")]
    ])

def get_base_management_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì§ –ò–º–ø–æ—Ä—Ç —Å–µ—Ä–∏–π–Ω–∏–∫–æ–≤", callback_data="import_serials")],
        [InlineKeyboardButton(text="üì• –≠–∫—Å–ø–æ—Ä—Ç —Å–µ—Ä–∏–π–Ω–∏–∫–æ–≤", callback_data="export_serials")],
        [InlineKeyboardButton(text="‚ö†Ô∏è –û—Ç–º–µ—Ç–∏—Ç—å –±—Ä–∞–∫/–≤–æ–∑–≤—Ä–∞—Ç", callback_data="mark_defect")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ])

def get_admin_panel_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë§ –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", callback_data="add_employee")],
        [InlineKeyboardButton(text="üì¢ –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É", callback_data="add_channel")],
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É", callback_data="remove_channel")],
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–∞–Ω–∞–ª/–≥—Ä—É–ø–ø—É", callback_data="edit_channel")],
        [InlineKeyboardButton(text="üìú –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤/–≥—Ä—É–ø–ø", callback_data="list_channels")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ])

def get_remove_channel_menu(channels):
    keyboard = []
    for channel in channels:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{channel['channel_name']}{f'/{channel['topic_id']}' if channel['topic_id'] else ''}",
                callback_data=f"remove_channel_{channel['channel_id']}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_edit_channel_menu(channels):
    keyboard = []
    for channel in channels:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{channel['channel_name']}{f'/{channel['topic_id']}' if channel['topic_id'] else ''}",
                callback_data=f"edit_channel_{channel['channel_id']}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="main_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def get_overdue_menu(appeal_id):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ–µ –≤—Ä–µ–º—è", callback_data=f"set_new_time_{appeal_id}")],
        [InlineKeyboardButton(text="üë∑ –¢—Ä–µ–±—É–µ—Ç—Å—è –≤—ã–µ–∑–¥", callback_data=f"await_specialist_{appeal_id}")]
    ])